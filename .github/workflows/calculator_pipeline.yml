
# GP = Good Practice
name: Calculator Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      PYTHONPATH: ./BE # Set PYTHONPATH to the BE directory for faster access and enhanced readability (GP)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('BE/requirements.txt') }}-${{ hashFiles('BE/requirements-test.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        working-directory: BE
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt

      - name: Start REST API
        working-directory: BE
        run: |
          nohup python calculator.py --rest & 
          sleep 15 
         # Adjust this based on how long it takes for your server to start

      - name: Run Tests
        run: |
          python -m pytest -s -v --maxfail=1 --exitfirst --strict-markers --junit-xml=tests/report.xml
        continue-on-error: false

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure()  
        # always run even if the previous step fails
        with:
          report_paths: '**/tests/report.xml'  # Update this to match the generated file path

        # Azure Container Registry (ACR)  
      - name: Log in to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: judevops.azurecr.io
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Build Docker Image
        working-directory: BE
        run: |
          docker build -t ali_kouravand_calculator_ci:${{ github.sha }} .
      
      - name: Tag Docker Image
        run: |
          docker tag ali_kouravand_calculator_ci:${{ github.sha }} judevops.azurecr.io/ali_kouravand_calculator_ci:${{ github.sha }}
      
      - name: Push Docker Image
        run: |
          docker push judevops.azurecr.io/ali_kouravand_calculator_ci:${{ github.sha }}
      
      
      - name: Run Calculator
        run: |
          docker run -d judevops.azurecr.io/ali_kouravand_calculator_ci:${{ github.sha }} --add 1 7

      - name: Docker Cleanup # (GP) Clean up my disc spacve ffs -_-
        run: |
          docker system prune -af
        # this prune will force delete all docker resources thats not running or being used (thanks to -a selects all & -f which force deletes them)