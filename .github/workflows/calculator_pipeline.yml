# GP = Good Practice
name: Calculator Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip 
          # The cache is really useful because it checks the latest stored cache installation of dependencies or libraries,
          # avoiding redundant work/installations => faster performing pipeline
          key: ${{ runner.os }}-pip-${{ hashFiles('BE/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        working-directory: BE
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start selenium
        run: |  
          docker run --name selenium -d --add-host host.docker.internal:host-gateway -p 4444:4444 -p 5900:5900 --shm-size="2g" selenium/standalone-chrome:4.2.1-20220531
          sleep 15

      - name: docker webcalculator runner & running rest API
        run: |
          docker compose -p webcalculator up -d 
          

      - name: Run Tests
        working-directory: tests
        run: |
          python -m pytest -s -v --maxfail=1 --exitfirst --strict-markers --junit-xml=ci_report.xml
        continue-on-error: false

      - name: Upload Test Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ci-pytest-report
          path: ci_report.xml

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()
         # Always run even if the previous step fails
        with:
          report_paths: "**/*.xml"

      # Azure Container Registry (ACR)
      - name: Log in to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: judevops.azurecr.io
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Build Docker Image
        working-directory: BE
        run: |
          docker build -t ali_kouravand_calculator_ci:${{ github.sha }} .

      - name: Tag Docker Image
        run: |
          docker tag ali_kouravand_calculator_ci:${{ github.sha }} judevops.azurecr.io/ali_kouravand_calculator_ci:${{ github.sha }}

      - name: Push Docker Image
        run: |
          docker push judevops.azurecr.io/ali_kouravand_calculator_ci:${{ github.sha }}

      - name: Run Calculator
        run: |
          docker run -d judevops.azurecr.io/ali_kouravand_calculator_ci:${{ github.sha }} --add 1 7

      - name: Docker Cleanup # (GP) Clean up my disc space ffs -_-
        run: |
          docker system prune -af
        # This prune will force delete all Docker resources that are not running or being used (thanks to -a, which selects all, & -f, which force deletes them)
